name: Push to DockerHub and Run it on the Remote Server

on:
    push:
        # Publish `master` as Docker `latest` image.
        branches:
            - master
        # Publish `v1.2.3` tags as releases.
        tags:
            - v*

    # Run tests for any PRs.
    pull_request:
        branches:
            - master

env:
    IMAGE_NAME: tampermokey-script-dev
    REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
    REMOTE_USER: ${{ secrets.REMOTE_USER }}
    REMOTE_SSH_KEY: ${{ secrets.REMOTE_SSH_KEY }}
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            - name: Build image
              run: docker build -t $IMAGE_NAME .

            - name: Log into DockHub
              run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            - name: Push image to DockHub
              run: |
                  IMAGE_ID=$DOCKER_USERNAME/$IMAGE_NAME

                  # 转换成小写
                  IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

                  # 从版本中删除 github-ref Or github-sha 前缀
                  VERSION=$(echo "${{ github.sha }}" | sed -e 's,.*/\(.*\),\1,')

                  # 从标签名称中删除 v 前缀
                  # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

                  # Use Docker `latest` tag convention
                  [ "${{ github.ref }}" == "master" ] && VERSION=latest

                  # 保留前 7 位
                  VERSION=${VERSION:0:7}

                  # 打印 IMAGE_ID
                  echo IMAGE_ID=$IMAGE_ID
                  # 打印 VERSION
                  echo VERSION=$VERSION

                  docker tag $IMAGE_NAME ${IMAGE_ID}:$VERSION

                  docker push $IMAGE_ID:$VERSION
            - name: Deploy to Remote Server
              uses: appleboy/ssh-action@v0.1.4
              with:
                  host: ${{ env.REMOTE_HOST }}
                  username: ${{ env.REMOTE_USER }}
                  key: ${{ env.REMOTE_SSH_KEY }}
                  script: |
                      IMAGE_ID=${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
                      VERSION=${{ github.sha }}
                      if [[ "${{ github.ref }}" == refs/tags/* ]]; then
                        VERSION=${{ github.ref }}
                        VERSION=${VERSION##*/}  # Get the tag name from the ref
                      elif [[ "${{ github.ref }}" == refs/heads/master ]]; then
                        VERSION=latest
                      fi

                      if [[ "$VERSION" != "latest" ]]; then
                        VERSION=${VERSION:0:7}
                      fi

                      docker pull $IMAGE_ID:$VERSION
                      docker stop my_app_container || true
                      docker rm my_app_container || true
                      docker run -d --name my_app_container -p 3000:3000 $IMAGE_ID:$VERSION
